{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/nicke/To Do Project/phase-3-project-react-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Tasks from './components/Todos';\nimport { useState, useEffect } from 'react';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTodos(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/todos');\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  const fetchTask = async id => {\n    const res = await fetch('http://localhost:5000/todos/${id}');\n    const data = await res.json();\n    console.log(data);\n    return data;\n  };\n\n  const addTask = async task => {\n    const res = await fetch(`http://localhost:5000/todos`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTodos([...todos, data]);\n  };\n\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:5000/todos/${id}`, {\n      method: 'DELETE'\n    });\n    res.status === 200 ? setTodos(todos.filter(todo => todo.id !== id)) : alert('Error deleting this task');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: () => setShowAddTask(!showAddTask),\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n              onAdd: addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), todos.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n              todos: todos,\n              onDelete: deleteTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this) : 'No tasks available!']\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"uta5L17303iAk6NrtKL9hV6ivaY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","BrowserRouter","Router","Route","Routes","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","todos","setTodos","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","console","log","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","status","filter","todo","alert","length"],"sources":["/mnt/c/Users/nicke/To Do Project/phase-3-project-react-frontend/src/App.js"],"sourcesContent":["import Header from './components/Header'\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom'\nimport Tasks from './components/Todos'\nimport {useState, useEffect} from 'react'\nimport AddTask from './components/AddTask'\n\n\nconst App = () =>  {\nconst [showAddTask,setShowAddTask] = useState(false)\nconst [todos, setTodos] = useState([])\n\nuseEffect(()=>{\n  const getTasks = async () =>{\n    const tasksFromServer = await fetchTasks() \n    setTodos(tasksFromServer)\n  }\n  \n\n  getTasks()\n},[])\n\n\nconst fetchTasks =  async () =>{\n    const res = await fetch('http://localhost:5000/todos')\n    const data =  await res.json()\n \n    console.log(data)\n    return data\n\n}\n\nconst fetchTask =  async (id) =>{\n    const res = await fetch('http://localhost:5000/todos/${id}')\n    const data =  await res.json()\n \n    console.log(data)\n    return data\n\n}\n\n\nconst addTask = async (task) =>{\n  const res = await fetch (`http://localhost:5000/todos`,{\n    method: 'POST',\n    headers:{\n      'Content-type':'application/json'\n    },\n    body: JSON.stringify(task)\n  })\n\n  const data =await  res.json()\n\n  setTodos([...todos, data])\n\n}\n\n\nconst deleteTask =async(id)=>{\n  const res = await fetch (`http://localhost:5000/todos/${id}`,{\n    method: 'DELETE',\n  })\n  res.status === 200\n  ? setTodos(todos.filter((todo) => todo.id !== id)) : alert('Error deleting this task')\n}\n\n  return (\n    <Router>\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} \n      showAdd={showAddTask}/>\n\n      <Routes>\n          <Route\n            path='/'\n            element={\n              <>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {todos.length > 0 ? (\n                  <Tasks\n                  todos={todos}\n                    onDelete={deleteTask}\n                  />\n                ) : (\n                  'No tasks available!'\n                )}\n              </>\n            }\n          />\n      </Routes>\n    </div>\n\n    </Router>\n  )\n}\n\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}